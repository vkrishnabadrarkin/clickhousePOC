ATTACH TABLE FLOWINFOnosearchtag
(
    name String, 
    modelkey String, 
    `port.fstart` Array(UInt32), 
    `port.fend` Array(UInt32), 
    `port.display` Array(String), 
    `port.ianaName` Array(String), 
    `port.ianaPortDisplay` Array(String), 
    fProtocol Enum8('TCP' = 0, 'UDP' = 1, 'OTHER' = 2), 
    `srcIP.prefixLength` Array(UInt32), 
    `srcIP.ipAddress` Array(String), 
    `srcIP.netMask` Array(String), 
    `srcIP.networkAddress` Array(String), 
    `srcIP.cidr` Array(String), 
    `srcIP.fstart` Array(UInt64), 
    `srcIP.fend` Array(UInt64), 
    `srcIP.ipaddresstype` Array(String), 
    `srcIP.privateaddress` Array(Int8), 
    `srcIP.Source` Array(String), 
    `srcIP.Ipmetadata_domain` Array(String), 
    `srcIP.Ipmetadata_isp` Array(String), 
    `dstIP.prefixLength` Array(UInt32), 
    `dstIP.ipAddress` Array(String), 
    `dstIP.netMask` Array(String), 
    `dstIP.networkAddress` Array(String), 
    `dstIP.cidr` Array(String), 
    `dstIP.fstart` Array(UInt64), 
    `dstIP.fend` Array(UInt64), 
    `dstIP.ipaddresstype` Array(String), 
    `dstIP.privateaddress` Array(Int8), 
    `dstIP.Source` Array(String), 
    `dstIP.Ipmetadata_domain` Array(String), 
    `dstIP.Ipmetadata_isp` Array(String), 
    TrfficType Enum8('EAST_WEST_TRAFFIC' = 1, 'INTERNET_TRAFFIC' = 2), 
    shared Int8, 
    networkLayer Enum8('UNKNOWN_LAYER' = 1, 'LAYER_2' = 2, 'LAYER_3' = 3), 
    `srcsubnet.prefixLength` Array(UInt32), 
    `srcsubnet.ipAddress` Array(String), 
    `srcsubnet.netMask` Array(String), 
    `srcsubnet.networkAddress` Array(String), 
    `srcsubnet.cidr` Array(String), 
    `srcsubnet.fstart` Array(UInt64), 
    `srcsubnet.fend` Array(UInt64), 
    `srcsubnet.ipaddresstype` Array(String), 
    `srcsubnet.privateaddress` Array(Int8), 
    `srcsubnet.Source` Array(String), 
    `srcsubnet.Ipmetadata_domain` Array(String), 
    `srcsubnet.Ipmetadata_isp` Array(String), 
    `dstsubnet.prefixLength` Array(UInt32), 
    `dstsubnet.ipAddress` Array(String), 
    `dstsubnet.netMask` Array(String), 
    `dstsubnet.networkAddress` Array(String), 
    `dstsubnet.cidr` Array(String), 
    `dstsubnet.fstart` Array(UInt64), 
    `dstsubnet.fend` Array(UInt64), 
    `dstsubnet.ipaddresstype` Array(String), 
    `dstsubnet.privateaddress` Array(Int8), 
    `dstsubnet.Source` Array(String), 
    `dstsubnet.Ipmetadata_domain` Array(String), 
    `dstsubnet.Ipmetadata_isp` Array(String), 
    withinhost Int8, 
    typetag Enum8('TAG_TRAFFIC_TYPE_UNKNOWN' = 1, 'TAG_INTERNET_TRAFFIC' = 2, 'TAG_EAST_WEST_TRAFFIC' = 3, 'TAG_VM_VM_TRAFFIC' = 4, 'TAG_VM_PHY_TRAFFIC' = 5, 'TAG_PHY_PHY_TRAFFIC' = 6, 'TAG_SRC_IP_VMKNIC' = 7, 'TAG_DST_IP_VMKNIC' = 8, 'TAG_SRC_IP_ROUTER_INT' = 11, 'TAG_DST_IP_ROUTER_INT' = 12, 'TAG_SRC_IP_VM' = 13, 'TAG_DST_IP_VM' = 14, 'TAG_SRC_IP_INTERNET' = 15, 'TAG_DST_IP_INTERNET' = 16, 'TAG_SRC_IP_PHYSICAL' = 17, 'TAG_DST_IP_PHYSICAL' = 18, 'TAG_SAME_HOST' = 19, 'TAG_DIFF_HOST' = 20, 'TAG_SHARED_SERVICE' = 21, 'TAG_NOT_SHARED_SERVICE' = 22, 'TAG_NETWORK_SWITCHED' = 23, 'TAG_NETWORK_ROUTED' = 24, 'TAG_NETWORK_UNKNOWN' = 25, 'TAG_SRC_IP_VTEP' = 26, 'TAG_DST_IP_VTEP' = 27, 'TAG_COMMON_HOST_INFO_UNKNOWN' = 28, 'TAG_UNICAST' = 29, 'TAG_BROADCAST' = 30, 'TAG_MULTICAST' = 31, 'TAG_SRC_IP_LINK_LOCAL' = 32, 'TAG_DST_IP_LINK_LOCAL' = 33, 'TAG_SRC_IP_CLASS_E' = 35, 'TAG_DST_IP_CLASS_E' = 36, 'TAG_SRC_IP_CLASS_A_RESERVED' = 37, 'TAG_DST_IP_CLASS_A_RESERVED' = 38, 'TAG_INVALID_IP_PACKETS' = 39, 'TAG_NOT_ANALYZED' = 40, 'TAG_GENERIC_INTERNET_SRC_IP' = 41, 'TAG_SNAT_DNAT_FLOW' = 42, 'TAG_NATTED' = 43, 'TAG_MULTINICS' = 44, 'TAG_MULTI_NATRULE' = 45, 'TAG_SRC_VC' = 46, 'TAG_DST_VC' = 47, 'TAG_SRC_AWS' = 48, 'TAG_DST_AWS' = 49, 'TAG_WITHIN_DC' = 50, 'TAG_DIFF_DC' = 51, 'TAG_SRC_IP_IN_SNAT_RULE_TARGET' = 52, 'TAG_DST_IP_IN_DNAT_RULE_ORIGINAL' = 53, 'TAG_SRC_IP_MULTI_NAT_RULE' = 54, 'TAG_DNAT_IP_MULTI_NAT_RULE' = 55, 'DEPRECATED_TAG_DST_IP_IN_SNAT_RULE_TARGET' = 56, 'DEPRECATED_TAG_SRC_IP_IN_DNAT_RULE_ORIGINAL' = 57, 'TAG_INVALID_IP_DOMAIN' = 58, 'TAG_WITHIN_VPC' = 59, 'TAG_DIFF_VPC' = 60, 'TAG_SRC_IP_IN_MULTIPLE_SUBNETS' = 61, 'TAG_DST_IP_IN_MULTIPLE_SUBNETS' = 62, 'TAG_SFLOW' = 63, 'TAG_PRE_NAT_FLOW' = 64, 'TAG_POST_NAT_FLOW' = 65, 'TAG_LOGICAL_FLOW' = 66, 'TAG_SRC_K8S_POD' = 67, 'TAG_DST_K8S_POD' = 68, 'TAG_POD_POD_TRAFFIC' = 69, 'TAG_VM_POD_TRAFFIC' = 70, 'TAG_POD_PHYSICAL_TRAFFIC' = 71), 
    __searchTags Array(String), 
    __related_entities Array(String), 
    srcVmTags Array(String), 
    dstVmTags Array(String), 
    `attribute.reportedaction` Array(Enum8('ALLOW' = 0, 'DENY' = 1, 'DROP' = 2, 'REJECT' = 3, 'REDIRECT' = 4, 'DONT_REDIRECT' = 5)), 
    `attribute.reportedRuleId` Array(String), 
    `attribute.collectorId` Array(UInt32), 
    `attribute_rule.name` Array(String), 
    `attribute_rule.modelkey` Array(String), 
    `attribute_firewallmanager.name` Array(String), 
    `attribute_firewallmanager.modelkey` Array(String), 
    activedpIds Array(UInt32), 
    typeTagsPacked String, 
    protectionStatus Enum8('UNKNOWN_STATUS' = 1, 'PROTECTED' = 2, 'ANY_ANY' = 3, 'UN_PROTECTED' = 4), 
    flowAction Enum8('ALLOW' = 0, 'DENY' = 1, 'DROP' = 2, 'REJECT' = 3, 'REDIRECT' = 4, 'DONT_REDIRECT' = 5), 
    `srcDnsInfo.ipDomain` Array(UInt64), 
    `srcDnsInfo.ip` Array(UInt64), 
    `srcDnsInfo.domainName` Array(String), 
    `srcDnsInfo.hostName` Array(String), 
    `srcDnsInfo.source` Array(String), 
    `dstDnsInfo.ipDomain` Array(UInt64), 
    `dstDnsInfo.ip` Array(UInt64), 
    `dstDnsInfo.domainName` Array(String), 
    `dstDnsInfo.hostName` Array(String), 
    `dstDnsInfo.source` Array(String), 
    `reporterEntity.collectorId` Array(UInt32), 
    `reporterEntity_reporter.name` Array(String), 
    `reporterEntity_reporter.modelkey` Array(String), 
    SchemaVersion UInt32, 
    lastActivity UInt64, 
    activity UInt32, 
    `srck8Info.k8scollectorId` Array(UInt32), 
    `srck8Info_k8sservice.name` Array(String), 
    `srck8Info_k8sservice.modelkey` Array(String), 
    `srck8Info_k8scluster.name` Array(String), 
    `srck8Info_k8scluster.modelkey` Array(String), 
    `srck8Info_k8snamespace.name` Array(String), 
    `srck8Info_k8snamespace.modelkey` Array(String), 
    `srck8Info_k8snode.name` Array(String), 
    `srck8Info_k8snode.modelkey` Array(String), 
    `dstk8Info.k8scollectorId` Array(UInt32), 
    `dstk8Info_k8sservice.name` Array(String), 
    `dstk8Info_k8sservice.modelkey` Array(String), 
    `dstk8Info_k8scluster.name` Array(String), 
    `dstk8Info_k8scluster.modelkey` Array(String), 
    `dstk8Info_k8snamespace.name` Array(String), 
    `dstk8Info_k8snamespace.modelkey` Array(String), 
    `dstk8Info_k8snode.name` Array(String), 
    `dstk8Info_k8snode.modelkey` Array(String), 
    lbflowtype Enum8('PRE_NAT' = 0, 'POST_NAT' = 1, 'LOGICAL' = 2), 
    `loadBalancerInfo.type` Array(Enum8('PRE_NAT' = 0, 'POST_NAT' = 1, 'LOGICAL' = 2)), 
    `loadBalancerInfo.collectorId` Array(UInt32), 
    `loadBalancerInfo.relevantPort` Array(UInt32), 
    `loadBalancerInfo_loadbalancervIP.prefixLength` Array(UInt32), 
    `loadBalancerInfo_loadbalancervIP.ipAddress` Array(String), 
    `loadBalancerInfo_loadbalancervIP.netMask` Array(String), 
    `loadBalancerInfo_loadbalancervIP.networkAddress` Array(String), 
    `loadBalancerInfo_loadbalancervIP.cidr` Array(String), 
    `loadBalancerInfo_loadbalancervIP.fstart` Array(UInt64), 
    `loadBalancerInfo_loadbalancervIP.fend` Array(UInt64), 
    `loadBalancerInfo_loadbalancervIP.ipaddresstype` Array(String), 
    `loadBalancerInfo_loadbalancervIP.privateaddress` Array(Int8), 
    `loadBalancerInfo_loadbalancervIP.Source` Array(String), 
    `loadBalancerInfo_loadbalancervIP.Ipmetadata_domain` Array(String), 
    `loadBalancerInfo_loadbalancervIP.Ipmetadata_isp` Array(String), 
    `loadBalancerInfo_loadbalancerinternalIP.prefixLength` Array(UInt32), 
    `loadBalancerInfo_loadbalancerinternalIP.ipAddress` Array(String), 
    `loadBalancerInfo_loadbalancerinternalIP.netMask` Array(String), 
    `loadBalancerInfo_loadbalancerinternalIP.networkAddress` Array(String), 
    `loadBalancerInfo_loadbalancerinternalIP.cidr` Array(String), 
    `loadBalancerInfo_loadbalancerinternalIP.fstart` Array(UInt64), 
    `loadBalancerInfo_loadbalancerinternalIP.fend` Array(UInt64), 
    `loadBalancerInfo_loadbalancerinternalIP.ipaddresstype` Array(String), 
    `loadBalancerInfo_loadbalancerinternalIP.privateaddress` Array(Int8), 
    `loadBalancerInfo_loadbalancerinternalIP.Source` Array(String), 
    `loadBalancerInfo_loadbalancerinternalIP.Ipmetadata_domain` Array(String), 
    `loadBalancerInfo_loadbalancerinternalIP.Ipmetadata_isp` Array(String), 
    `srcIpEntity.name` Array(String), 
    `srcIpEntity.modelkey` Array(String), 
    `dstIpEntity.name` Array(String), 
    `dstIpEntity.modelkey` Array(String), 
    `srcNic.name` Array(String), 
    `srcNic.modelkey` Array(String), 
    `dstNic.name` Array(String), 
    `dstNic.modelkey` Array(String), 
    `srcVm.name` Array(String), 
    `srcVm.modelkey` Array(String), 
    `dstVm.name` Array(String), 
    `dstVm.modelkey` Array(String), 
    `srcSg.name` Array(String), 
    `srcSg.modelkey` Array(String), 
    `dstSg.name` Array(String), 
    `dstSg.modelkey` Array(String), 
    `srcIpSet.name` Array(String), 
    `srcIpSet.modelkey` Array(String), 
    `dstIpSet.name` Array(String), 
    `dstIpSet.modelkey` Array(String), 
    `srcSt.name` Array(String), 
    `srcSt.modelkey` Array(String), 
    `dstSt.name` Array(String), 
    `dstSt.modelkey` Array(String), 
    `srcL2Net.name` Array(String), 
    `srcL2Net.modelkey` Array(String), 
    `dstL2Net.name` Array(String), 
    `dstL2Net.modelkey` Array(String), 
    `srcGroup.name` Array(String), 
    `srcGroup.modelkey` Array(String), 
    `dstGroup.name` Array(String), 
    `dstGroup.modelkey` Array(String), 
    `srcCluster.name` Array(String), 
    `srcCluster.modelkey` Array(String), 
    `dstCluster.name` Array(String), 
    `dstCluster.modelkey` Array(String), 
    `srcRp.name` Array(String), 
    `srcRp.modelkey` Array(String), 
    `dstRp.name` Array(String), 
    `dstRp.modelkey` Array(String), 
    `srcDc.name` Array(String), 
    `srcDc.modelkey` Array(String), 
    `dstDc.name` Array(String), 
    `dstDc.modelkey` Array(String), 
    `srcHost.name` Array(String), 
    `srcHost.modelkey` Array(String), 
    `dstHost.name` Array(String), 
    `dstHost.modelkey` Array(String), 
    `srcManagers.name` Array(String), 
    `srcManagers.modelkey` Array(String), 
    `dstManagers.name` Array(String), 
    `dstManagers.modelkey` Array(String), 
    `flowDomain.name` Array(String), 
    `flowDomain.modelkey` Array(String), 
    `srcLookupDomain.name` Array(String), 
    `srcLookupDomain.modelkey` Array(String), 
    `dstLookupDomain.name` Array(String), 
    `dstLookupDomain.modelkey` Array(String), 
    `srcVpc.name` Array(String), 
    `srcVpc.modelkey` Array(String), 
    `dstVpc.name` Array(String), 
    `dstVpc.modelkey` Array(String), 
    `srcTransportNode.name` Array(String), 
    `srcTransportNode.modelkey` Array(String), 
    `dstTransportNode.name` Array(String), 
    `dstTransportNode.modelkey` Array(String), 
    `srcDvpg.name` Array(String), 
    `srcDvpg.modelkey` Array(String), 
    `dstDvpg.name` Array(String), 
    `dstDvpg.modelkey` Array(String), 
    `srcDvs.name` Array(String), 
    `srcDvs.modelkey` Array(String), 
    `dstDvs.name` Array(String), 
    `dstDvs.modelkey` Array(String)
)
ENGINE = MergeTree()
ORDER BY name
SETTINGS index_granularity = 8192
