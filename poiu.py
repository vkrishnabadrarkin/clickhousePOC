import re
string  = '"ipAddress"   ip, "port"   port, "port_name"   port_name, "protocol"   protocol, "vm_name"    VM     str(vm_num), "vm_otype"   1, "vm_oid"   vm_num, "subnet_ip"   subnet_Ip, "subnet_netmask"   netmask, "subnet_prefixLength"   27, "subnet_networkAddress"  subnet_Ip, "subnet_cidr"   cidr, "subnet_start"   start, "subnet_end"   end, "ipAddressType"    ENDPOINT , "privateAddress"   1, "source"    VMware , "Ipmetadata_domain"    Domain , "ipmetadata_isp"    Isp , "host_name"    HOST     str(host_num), "host_otype"  4, "host_oid"   host_num, "dnsinfo_ipdomain"   int(ip_network(ip    /19 , strict=False)[0]), "dnsinfo_ip"   int(ip_network(ip    /17 , strict=False)[0]), "dnsinfo_domainname"    vmware.com , "dnsinfo_hostname"    vmware rtp 192.168.0.0 , "dnsinfo_source"    vmware , "k8s_service_name"    K8s_service   str(k8s_serv_num), "k8s_service_otype"  1504, "k8s_service_oid"   k8s_serv_num, "k8s_cluster_name"    k8s_cluster     str(k8s_cluster_num), "k8s_cluster_otype"   1501, "k8s_cluster_oid"   k8s_cluster_num, "k8s_namespace_name"    k8s_namespace   str(k8s_namespace_num), "k8s_namespace_otype"   1503, "k8s_namespace_oid"   k8s_namespace_num, "k8s_node_name"    k8s_node    str(k8s_node_num), "k8s_node_otype"   1502, "k8s_node_oid"   k8s_node_num, "IP_entity_name"   ip, "IP_entity_otype"   541, "IP_entity_oid"   vm_num, "Nic_name"    VNIC     str(vm_num), "Nic_otype"   18, "Nic_oid"   vm_num, "sg_name"    SG   str(sg_num), "sg_otype"   550, "sg_oid"   sg_num, "IP_set_name"    IPSET    str(ipset_num), "IP_set_otype"   84, "IP_set_oid"   ipset_num, "STag_name"    SecTag    str(sg_num), "STag_otype"   99, "STag_oid"   sg_num, "L2net_name"    VLAN     str(L2_num), "L2net_otype"   12, "L2net_oid"   L2_num, "Grp_name"    GROUP   str(Grp_num), "Grp_otype"   81, "Grp_oid"   Grp_num, "cluster_name"    CLUSTER   str(cluster_num), "cluster_otype"   66, "cluster_oid"   cluster_num, "RP_name"    RP     str(rp_num), "RP_otype"   79, "RP_oid"   rp_num, "DC_name"    DATACENTER101 , "DC_otype"   105, "DC_oid"   1, "EP_name"   ip         port_name         str(port), "EP_otype"   605, "EP_oid"   vm_num, "managerNSX_name"    NSX Manager     str(NSX_VC_num), "managerNSX_otype"   7, "managerNSX_oid"   NSX_VC_num, "lookupDomain_name"    GLOBAL , "lookupDomain_otype"   197, "lookupDomain_oid"   876567, "vpc_name"    AWS VPC   str(vm_num//1000), "vpc_otype"  603, "vpc_oid"   vm_num/1000, "transportNode_name"    TN   str(NSX_VC_num), "transportNode_otype"  843, "transportNode_oid"   NSX_VC_num, "Dvpg_name"    DVPG    str(Dvpg_num), "Dvpg_otype"   3, "Dvpg_oid"   Dvpg_num, "Dvs_name"    DVG    str(Dvs_num), "Dvs_otype"   2, "Dvs_oid"   Dvs_num"ipAddress"   ip, "port"   port, "port_name"   port_name, "protocol"   protocol, "vm_name"    VM     str(vm_num), "vm_otype"   1, "vm_oid"   vm_num, "subnet_ip"   subnet_Ip, "subnet_netmask"   netmask, "subnet_prefixLength"   27, "subnet_networkAddress"  subnet_Ip, "subnet_cidr"   cidr, "subnet_start"   start, "subnet_end"   end, "ipAddressType"    ENDPOINT , "privateAddress"   1, "source"    VMware , "Ipmetadata_domain"    Domain , "ipmetadata_isp"    Isp , "host_name"    HOST     str(host_num), "host_otype"  4, "host_oid"   host_num, "dnsinfo_ipdomain"   int(ip_network(ip    /19 , strict=False)[0]), "dnsinfo_ip"   int(ip_network(ip    /17 , strict=False)[0]), "dnsinfo_domainname"    vmware.com , "dnsinfo_hostname"    vmware rtp 192.168.0.0 , "dnsinfo_source"    vmware , "k8s_service_name"    K8s_service   str(k8s_serv_num), "k8s_service_otype"  1504, "k8s_service_oid"   k8s_serv_num, "k8s_cluster_name"    k8s_cluster     str(k8s_cluster_num), "k8s_cluster_otype"   1501, "k8s_cluster_oid"   k8s_cluster_num, "k8s_namespace_name"    k8s_namespace   str(k8s_namespace_num), "k8s_namespace_otype"   1503, "k8s_namespace_oid"   k8s_namespace_num, "k8s_node_name"    k8s_node    str(k8s_node_num), "k8s_node_otype"   1502, "k8s_node_oid"   k8s_node_num, "IP_entity_name"   ip, "IP_entity_otype"   541, "IP_entity_oid"   vm_num, "Nic_name"    VNIC     str(vm_num), "Nic_otype"   18, "Nic_oid"   vm_num, "sg_name"    SG   str(sg_num), "sg_otype"   550, "sg_oid"   sg_num, "IP_set_name"    IPSET    str(ipset_num), "IP_set_otype"   84, "IP_set_oid"   ipset_num, "STag_name"    SecTag    str(sg_num), "STag_otype"   99, "STag_oid"   sg_num, "L2net_name"    VLAN     str(L2_num), "L2net_otype"   12, "L2net_oid"   L2_num, "Grp_name"    GROUP   str(Grp_num), "Grp_otype"   81, "Grp_oid"   Grp_num, "cluster_name"    CLUSTER   str(cluster_num), "cluster_otype"   66, "cluster_oid"   cluster_num, "RP_name"    RP     str(rp_num), "RP_otype"   79, "RP_oid"   rp_num, "DC_name"    DATACENTER101 , "DC_otype"   105, "DC_oid"   1, "EP_name"   ip         port_name         str(port), "EP_otype"   605, "EP_oid"   vm_num, "managerNSX_name"    NSX Manager     str(NSX_VC_num), "managerNSX_otype"   7, "managerNSX_oid"   NSX_VC_num, "lookupDomain_name"    GLOBAL , "lookupDomain_otype"   197, "lookupDomain_oid"   876567, "vpc_name"    AWS VPC   str(vm_num//1000), "vpc_otype"  603, "vpc_oid"   vm_num/1000, "transportNode_name"    TN   str(NSX_VC_num), "transportNode_otype"  843, "transportNode_oid"   NSX_VC_num, "Dvpg_name"    DVPG    str(Dvpg_num), "Dvpg_otype"   3, "Dvpg_oid"   Dvpg_num, "Dvs_name"    DVG    str(Dvs_num), "Dvs_otype"   2, "Dvs_oid"   Dvs_num'
print (re.findall(r'"(.*?)"', string))